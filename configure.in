
AC_REVISION($Revision: 1.177 $)

AC_INIT([DSL CPE API driver],[4.16.6.3],[],[drv_dsl_cpe_api])

AC_CONFIG_SRCDIR(src/Makefile.am)
AM_INIT_AUTOMAKE

# Checks for programs.
AC_PROG_CC
AC_PROG_RANLIB
AM_PROG_CC_C_O

AC_CONFIG_HEADER(src/include/drv_dsl_cpe_api_config.h)

#
# save the configure arguments
#
CONFIGURE_OPTIONS="$ac_configure_args"
AC_SUBST(CONFIGURE_OPTIONS)

AM_CONDITIONAL(DEVICE_DANUBE, false)
AM_CONDITIONAL(DEVICE_VRX, false)


PREDEFINED_CONF_EXTRA_DRV_CFLAGS="-Os"
PREDEFINED_CONF_DSL_CHANNELS_PER_LINE=1
PREDEFINED_CONF_DSL_DBG_MAX_LEVEL_SET="no"
PREDEFINED_CONF_INCLUDE_DEPRECATED="yes"
PREDEFINED_CONF_INCLUDE_DEVICE_EXCEPTION_CODES="no"
PREDEFINED_CONF_INCLUDE_FW_REQUEST_SUPPORT="yes"
PREDEFINED_CONF_INCLUDE_DSL_FIRMWARE_MEMORY_FREE="yes"
PREDEFINED_CONF_INCLUDE_DSL_DELT="yes"
PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="no"
PREDEFINED_CONF_INCLUDE_DSL_ADSL_MIB="no"
PREDEFINED_CONF_INCLUDE_DSL_CEOC="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_TRACE_BUFFER="no"
PREDEFINED_CONF_INCLUDE_DSL_CONFIG_GET="yes"
PREDEFINED_CONF_INCLUDE_DSL_SYSTEM_INTERFACE="yes"
PREDEFINED_CONF_INCLUDE_DSL_CPE_MISC_LINE_STATUS="no"
PREDEFINED_CONF_INCLUDE_DSL_RESOURCE_STATISTICS="yes"
PREDEFINED_CONF_INCLUDE_DSL_FRAMING_PARAMETERS="yes"
PREDEFINED_CONF_INCLUDE_DSL_G997_LINE_INVENTORY="yes"
PREDEFINED_CONF_INCLUDE_DSL_G997_FRAMING_PARAMETERS="yes"
PREDEFINED_CONF_INCLUDE_DSL_G997_PER_TONE="yes"
PREDEFINED_CONF_INCLUDE_DSL_G997_STATUS="yes"
PREDEFINED_CONF_INCLUDE_DSL_G997_ALARM="yes"
PREDEFINED_CONF_DSL_CPE_STATIC_DELT_DATA="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CONFIG="yes"
PREDEFINED_CONF_INCLUDE_DSL_PM="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_HISTORY="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS="no"
PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS="no"
PREDEFINED_CONF_INCLUDE_PILOT_TONES_STATUS="yes"
PREDEFINED_CONF_INCLUDE_REAL_TIME_TRACE_SUPPORT="no"
PREDEFINED_CONF_INCLUDE_DSL_BONDING_SUPPORT="no"

dnl enable DANUBE support
AC_ARG_ENABLE(danube,
    AC_HELP_STRING(
        [--enable-danube],[Add DANUBE Family support.]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_API_DANUBE,,[Add DANUBE support])
            AM_CONDITIONAL(DEVICE_DANUBE, true)
            AC_SUBST([DSL_DEVICE_NAME],[Danube_Family])
        fi
    ]
)

dnl enable VRX support
AC_ARG_ENABLE(vrx,
    AC_HELP_STRING(
        [--enable-vrx],[Add VRX support.]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_API_VRX,,[Add VRX support])
            AM_CONDITIONAL(DEVICE_VRX, true)
            AC_SUBST([DSL_DEVICE_NAME],[VRX])
        fi
    ]
)

# This selects the sub-device for VRX Family (only valid in case of VRX enabled)
if test -z "${DEVICE_VRX_TRUE}"; then
dnl Select VRX device type
AC_ARG_ENABLE(vrx-device,
    AC_HELP_STRING([--enable-vrx-device=vr9 | vr10],[Select VRX Device]),
    [
        echo Set VRX Device = $enableval
        case $enableval in
        vr9)
            AC_DEFINE(DSL_VRX_DEVICE_VR9,,[Add VR9 support])
            AC_SUBST([DSL_VRX_DEVICE_NAME],[VR9])
            ;;
        vr10)
            AC_DEFINE(DSL_VRX_DEVICE_VR10,,[Add VR10 support])
            AC_SUBST([DSL_VRX_DEVICE_NAME],[VR10])
            ;;
        *) AC_MSG_ERROR([ Select VRX Device, use vr9 | vr10 ]);
             ;;
        esac
    ]
)
fi

CONF_MAX_DEVICE_NUMBER=1
dnl set the number of DSL devices to be supported
AC_ARG_WITH(max-device,
    AS_HELP_STRING(
        [--with-max-device=value],[Maximum DSL devices to support.]
    ),
    [
        if test "$withval" = ""; then
            AC_DEFINE_UNQUOTED(DSL_DRV_MAX_DEVICE_NUMBER, 1, [Maximum DSL devices to support])
            AC_SUBST([DSL_DRV_MAX_DEVICE_NUMBER],[1])
        else
            AC_DEFINE_UNQUOTED(DSL_DRV_MAX_DEVICE_NUMBER,$withval, [Maximum DSL devices to support])
            AC_SUBST([DSL_DRV_MAX_DEVICE_NUMBER],[$withval])
            CONF_MAX_DEVICE_NUMBER=$withval
        fi
    ],
    [
        AC_DEFINE_UNQUOTED(DSL_DRV_MAX_DEVICE_NUMBER, 1, [Maximum DSL devices to support])
        AC_SUBST([DSL_DRV_MAX_DEVICE_NUMBER],[1])
    ]
)

CONF_LINES_PER_DEVICE=1
dnl set the number of DSL lines per device to be supported
AC_ARG_WITH(lines-per-device,
    AS_HELP_STRING(
    [--with-lines-per-device=value],[Maximum lines per DSL device to support.]
    ),
    [
        if test "$withval" = ""; then
            AC_DEFINE_UNQUOTED(DSL_DRV_LINES_PER_DEVICE, 1, [Maximum lines per DSL device to support])
            AC_SUBST([DSL_DRV_LINES_PER_DEVICE],[1])
        else
            AC_DEFINE_UNQUOTED(DSL_DRV_LINES_PER_DEVICE,$withval, [Maximum lines per DSL device to support])
            AC_SUBST([DSL_DRV_LINES_PER_DEVICE],[$withval])
            CONF_LINES_PER_DEVICE=$withval
        fi
    ],
    [
        AC_DEFINE_UNQUOTED(DSL_DRV_LINES_PER_DEVICE, 1, [Maximum lines per DSL device to support])
        AC_SUBST([DSL_DRV_LINES_PER_DEVICE],[1])
    ]
)

if [[ $CONF_MAX_DEVICE_NUMBER -gt 1 -o $CONF_LINES_PER_DEVICE -gt 1 ]]; then
    AC_DEFINE(INCLUDE_DSL_BONDING,,[Include DSL BONDING support])
    AM_CONDITIONAL(INCLUDE_DSL_BONDING, true)
    AC_SUBST([INCLUDE_DSL_BONDING],[yes])
else
    AM_CONDITIONAL(INCLUDE_DSL_BONDING, false)
    AC_SUBST([INCLUDE_DSL_BONDING],[no])
fi

dnl Select configure model
AC_ARG_ENABLE(model,
    AC_HELP_STRING(
        [--enable-model[=model]],[Select configure model (lite|footprint|typical|full|debug)]
    ),
    [
        case "$enableval" in
        lite )
             AC_SUBST([DSL_CONFIG_MODEL_TYPE],[Lite])
             PREDEFINED_CONF_INCLUDE_DEPRECATED="no"
             PREDEFINED_CONF_INCLUDE_DSL_CONFIG_GET="no"
             PREDEFINED_CONF_INCLUDE_DSL_SYSTEM_INTERFACE="no"
             PREDEFINED_CONF_INCLUDE_DSL_RESOURCE_STATISTICS="no"
             PREDEFINED_CONF_INCLUDE_DSL_FRAMING_PARAMETERS="no"
             PREDEFINED_CONF_INCLUDE_DSL_G997_LINE_INVENTORY="no"
             PREDEFINED_CONF_INCLUDE_DSL_G997_FRAMING_PARAMETERS="no"
             PREDEFINED_CONF_INCLUDE_DSL_G997_PER_TONE="no"
             PREDEFINED_CONF_INCLUDE_DSL_G997_STATUS="no"
             PREDEFINED_CONF_INCLUDE_DSL_G997_ALARM="no"
             PREDEFINED_CONF_INCLUDE_DSL_DELT="no"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CONFIG="no"
             PREDEFINED_CONF_INCLUDE_PILOT_TONES_STATUS="no"
             PREDEFINED_CONF_INCLUDE_DSL_BONDING_SUPPORT="no"

            ;;
        footprint )
             AC_SUBST([DSL_CONFIG_MODEL_TYPE],[Footprint])
             PREDEFINED_CONF_INCLUDE_DEPRECATED="no"
             PREDEFINED_CONF_INCLUDE_DSL_CEOC="yes"
             PREDEFINED_CONF_INCLUDE_DSL_RESOURCE_STATISTICS="no"
             PREDEFINED_CONF_INCLUDE_DSL_PM="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_PILOT_TONES_STATUS="no"

             # enable device specific options
             if test -z "${DEVICE_DANUBE_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
             fi
             if test -z "${DEVICE_VRX_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
             fi
             ;;
        typical )
             AC_SUBST([DSL_CONFIG_MODEL_TYPE],[Typical])
             PREDEFINED_CONF_DSL_DBG_MAX_LEVEL_SET="err"
             PREDEFINED_CONF_INCLUDE_DSL_CEOC="yes"
             PREDEFINED_CONF_INCLUDE_DSL_PM="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_HISTORY="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS="yes"
             PREDEFINED_CONF_INCLUDE_DEVICE_EXCEPTION_CODES="yes"

             # enable device specific options
             if test -z "${DEVICE_DANUBE_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_CPE_TRACE_BUFFER="yes"
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
             fi
             if test -z "${DEVICE_VRX_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
             fi
             ;;
        full )
             AC_SUBST([DSL_CONFIG_MODEL_TYPE],[Full])
             PREDEFINED_CONF_DSL_DBG_MAX_LEVEL_SET="wrn"
             PREDEFINED_CONF_INCLUDE_DSL_CEOC="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_MISC_LINE_STATUS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_PM="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_HISTORY="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS="yes"
             PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS="yes"
             PREDEFINED_CONF_INCLUDE_DEVICE_EXCEPTION_CODES="yes"

             # enable device specific options
             if test -z "${DEVICE_DANUBE_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_CPE_TRACE_BUFFER="yes"
                PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS="yes"
                PREDEFINED_CONF_INCLUDE_DSL_ADSL_MIB="yes"
                PREDEFINED_CONF_INCLUDE_REAL_TIME_TRACE_SUPPORT="yes"
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
             fi
             if test -z "${DEVICE_VRX_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
             fi
             ;;
        debug )
            AC_SUBST([DSL_CONFIG_MODEL_TYPE],[Debug])
            PREDEFINED_CONF_DSL_DBG_MAX_LEVEL_SET="msg"
            PREDEFINED_CONF_EXTRA_DRV_CFLAGS="-O2 -g0"
            PREDEFINED_CONF_INCLUDE_DSL_CEOC="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_MISC_LINE_STATUS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_DELT="yes"
            PREDEFINED_CONF_INCLUDE_DSL_PM="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_HISTORY="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS="yes"
            PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS="yes"
            PREDEFINED_CONF_INCLUDE_DEVICE_EXCEPTION_CODES="yes"

            # enable device specific options
            if test -z "${DEVICE_DANUBE_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_CPE_TRACE_BUFFER="yes"
                PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS="yes"
                PREDEFINED_CONF_INCLUDE_DSL_ADSL_MIB="yes"
                PREDEFINED_CONF_INCLUDE_REAL_TIME_TRACE_SUPPORT="yes"
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
            fi
             if test -z "${DEVICE_VRX_TRUE}"; then
                PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION="yes"
             fi
            ;;
        * )
            echo "error: invalid selection for --enable-model=$enableval"
            exit 1 ;;
        esac
    ],
    [
        AC_SUBST([DSL_CONFIG_MODEL_TYPE],[None selected])
    ]
)

dnl Enable debugging mode
AC_ARG_ENABLE(debug,
    AC_HELP_STRING(
        [--enable-debug,Enable debug info]
    ),
    [
        if test "$enableval" = yes; then
            AC_SUBST([EXTRA_DRV_CFLAGS],["-O2 -g0"])
        else
            AC_SUBST([EXTRA_DRV_CFLAGS],["-Os"])
        fi
    ],
    [
        AC_SUBST([EXTRA_DRV_CFLAGS],[$PREDEFINED_CONF_EXTRA_DRV_CFLAGS])
    ]
)

dnl enable linux kernel 2.6.x support
AM_CONDITIONAL(KERNEL_2_6, false)
AC_ARG_ENABLE(linux-26,
    AC_HELP_STRING(--enable-linux-26,Enable support for linux kernel 2.6.x),
    [
        AM_CONDITIONAL(KERNEL_2_6, true)
        if test -z "$ARCH" ; then
        [ARCH=`$CC -dumpmachine`]
        fi
        if test -n "$ARCH" ; then
        [ ARCH=`echo $ARCH | sed -e s'/-.*//' \
            -e 's/i[3-9]86/i386/' \
            -e 's/mipsel/mips/' \
            -e 's/powerpc/ppc/' \
            -e 's/sh[234]/sh/' \
        `]
        echo "Set the kernel architecture to $ARCH"
            AC_SUBST([KERNEL_ARCH],[$ARCH])
        else
        AC_MSG_ERROR([Kernel architecture not set!])
        fi
    ]
)

dnl Set kernel include path
AC_ARG_ENABLE(kernel-include,
    AC_HELP_STRING(--enable-kernel-include=x,Set the target kernel include path),
    [
        if test -e $enableval/linux/kernel.h; then
            AC_SUBST([KERNEL_INCL_PATH],[$enableval])
        else
            AC_MSG_ERROR([The kernel include directory is not valid!])
        fi
    ],
    [
        AC_SUBST([KERNEL_INCL_PATH],".")
    ]
)

dnl Set kernel build path
AC_ARG_ENABLE(kernelbuild,
    AC_HELP_STRING(--enable-kernel-build=x,Set the target kernel build path),
    [
        if test -e $enableval/include/linux/autoconf.h -o -e $enableval/include/generated/autoconf.h; then
            AC_SUBST([KERNEL_BUILD_PATH],[$enableval])
        else
            AC_MSG_ERROR([The kernel build directory is not valid or not configured!])
        fi
    ],
    [
        if test -z $KERNEL_BUILD_PATH; then
            # assume kernel was build in source dir...
            AC_SUBST([KERNEL_BUILD_PATH],[$KERNEL_INCL_PATH/..])
        fi
    ]
)

dnl set lib_ifxos include path
DEFAULT_IFXOS_INCLUDE_PATH='-I./lib_ifxos/src/include'
AC_ARG_ENABLE(ifxos-include,
    AC_HELP_STRING([--enable-ifxos-include=-I/path/to/your/lib_ifxos/src/include], [Set the lib_ifxos include path.]),
    [
        if test -n "$enableval"; then
            echo Set the lib_ifxos include path $enableval
            AC_SUBST([IFXOS_INCLUDE_PATH],[$enableval])
        else
            echo -e Set the default lib_ifxos include path $DEFAULT_IFXOS_INCLUDE_PATH
            AC_SUBST([IFXOS_INCLUDE_PATH],[$DEFAULT_IFXOS_INCLUDE_PATH])
        fi
    ],
    [
        echo -e Set the default lib_ifxos include path $DEFAULT_IFXOS_INCLUDE_PATH
        AC_SUBST([IFXOS_INCLUDE_PATH],[$DEFAULT_IFXOS_INCLUDE_PATH])
    ]
)

dnl Set target driver cflags
AM_CONDITIONAL(ADD_DRV_CFLAGS_SET, false)
AC_ARG_ENABLE(add_drv_cflags,
    AC_HELP_STRING(--enable-add-drv-cflags=x,Set add driver cflags),
    [
        if test -n "$enableval"; then
            echo Set add drv cflags = $enableval
            AM_CONDITIONAL(ADD_DRV_CFLAGS_SET, true)
            AC_SUBST([ADD_DRV_CFLAGS],[$enableval])
        fi
    ]
)

dnl Enable debug printouts
AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, false)
AC_ARG_ENABLE(debug-prints,
    AC_HELP_STRING(
        [--enable-debug-prints[=level]],[Enable debug printouts (default: yes/err|none/no|prn|err|wrn|msg|local)]
    ),
    [
        case "$enableval" in
        yes )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = no (using default)])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, false)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[no])

            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[n/a])
            ;;
        no | none )
            AC_DEFINE(DSL_DEBUG_DISABLE,,[Disabled debug prints])
            AC_SUBST([DSL_DEBUG_DISABLE],[yes])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = n/a])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, false)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[no])

            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[n/a])
            ;;
        prn | 0x1 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x1, [Debug level = print (prn)])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x1])
            ;;
        err | 0x2 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x2, [Debug level = error (err)])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x2])
            ;;
        wrn | 0x40 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x40, [Debug level = warning (wrn)])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x40])
            ;;
        msg | 0x80 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x80, [Debug level = local])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x80])
            ;;
        local | 0xFF )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0xFF, [Debug level = local])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0xFF])
            ;;
        * )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = no (using default)])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, false)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[no])

            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[n/a])
        esac
    ],
    [
        case "$PREDEFINED_CONF_DSL_DBG_MAX_LEVEL_SET" in
        yes )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = no (using default)])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, false)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[no])

            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[n/a])
            ;;
        no | none )
            AC_DEFINE(DSL_DEBUG_DISABLE,,[Disabled debug prints])
            AC_SUBST([DSL_DEBUG_DISABLE],[yes])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = n/a])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, false)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[no])

            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[n/a])
            ;;
        prn | 0x1 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x1, [Debug level = print (prn)])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x1])
            ;;
        err | 0x2 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x2, [Debug level = error (err)])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x2])
            ;;
        wrn | 0x40 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x40, [Debug level = warning (wrn)])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x40])
            ;;
        msg | 0x80 )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0x80, [Debug level = local])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0x80])
            ;;
        local | 0xFF )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = yes])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, true)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[yes])

            AC_DEFINE_UNQUOTED(DSL_DBG_MAX_LEVEL_PRE,0xFF, [Debug level = local])
            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[0xFF])
            ;;
        * )
            AC_SUBST([DSL_DEBUG_DISABLE],[no])

            AC_DEFINE(DSL_DBG_MAX_LEVEL_SET,,[Preselection of max. debug level = no (using default)])
            AM_CONDITIONAL(DSL_DBG_MAX_LEVEL_SET, false)
            AC_SUBST([DSL_DBG_MAX_LEVEL_SET],[no])

            AC_SUBST([DSL_DBG_MAX_LEVEL_PRE],[n/a])
        esac
    ]
)

dnl set the number of channels per line
AC_ARG_WITH(channels-per-line,
    AS_HELP_STRING(
        [--with-channels-per-line=value],[Channels per line to support.]
    ),
    [
        if test "$withval" = yes; then
            AC_MSG_ERROR([ Please provide a value for the channels per line ]);
        fi
        AC_DEFINE_UNQUOTED(DSL_CHANNELS_PER_LINE,$withval, [Channels per line to support])
        AC_SUBST([DSL_CHANNELS_PER_LINE],[$withval])
    ],
    [
        AC_DEFINE_UNQUOTED(DSL_CHANNELS_PER_LINE,$PREDEFINED_CONF_DSL_CHANNELS_PER_LINE, [Channels per line to support])
        AC_SUBST([DSL_CHANNELS_PER_LINE],[$PREDEFINED_CONF_DSL_CHANNELS_PER_LINE])
    ]
)

dnl enable library build
AM_CONDITIONAL(DSL_CPE_API_LIBRARY_BUILD_2_6, false)
AC_ARG_ENABLE(library-build,
    AS_HELP_STRING(
        [--enable-library-build],[Enable building the library file.]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(DSL_CPE_API_LIBRARY_BUILD_2_6,,[Enable building only library file])
            AM_CONDITIONAL(DSL_CPE_API_LIBRARY_BUILD_2_6, true)
            AC_SUBST([DSL_CPE_API_LIBRARY_BUILD_2_6],[yes])
        else
            AC_SUBST([DSL_CPE_API_LIBRARY_BUILD_2_6],[no])
        fi
    ],
    [
        AC_SUBST([DSL_CPE_API_LIBRARY_BUILD_2_6],[no])
    ]
)

dnl enable ADSL MIB support
AM_CONDITIONAL(INCLUDE_DSL_ADSL_MIB, false)
AC_ARG_ENABLE(adsl-mib,
    AC_HELP_STRING(
        [--enable-adsl-mib],[Include ADSL MIB support]
    ),
    [
        if test "$enableval" = yes; then
        AC_DEFINE(INCLUDE_DSL_ADSL_MIB,,[Include ADSL MIB support])
        AM_CONDITIONAL(INCLUDE_DSL_ADSL_MIB, true)
        AC_SUBST([INCLUDE_DSL_ADSL_MIB],[yes])
        else
        AC_SUBST([INCLUDE_DSL_ADSL_MIB],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_ADSL_MIB" = yes; then
            AC_DEFINE(INCLUDE_DSL_ADSL_MIB,,[Include ADSL MIB support])
            AM_CONDITIONAL(INCLUDE_DSL_ADSL_MIB, true)
            AC_SUBST([INCLUDE_DSL_ADSL_MIB],[yes])
        else
            AC_SUBST([INCLUDE_DSL_ADSL_MIB],[no])
        fi
    ]
)

dnl enable FW memory free support
AM_CONDITIONAL(INCLUDE_DSL_FIRMWARE_MEMORY_FREE, false)
AC_ARG_ENABLE(firmware-memory-free,
   AC_HELP_STRING(
      [--enable-firmware-memory-free],[Include FW memory free support]
   ),
   [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_FIRMWARE_MEMORY_FREE,,[Include FW memory free support])
            AM_CONDITIONAL(INCLUDE_DSL_FIRMWARE_MEMORY_FREE, true)
            AC_SUBST([INCLUDE_DSL_FIRMWARE_MEMORY_FREE],[yes])
        else
            AC_SUBST([INCLUDE_DSL_FIRMWARE_MEMORY_FREE],[no])
        fi
   ],
   [
          if test "$PREDEFINED_CONF_INCLUDE_DSL_FIRMWARE_MEMORY_FREE" = yes; then
            AC_DEFINE(INCLUDE_DSL_FIRMWARE_MEMORY_FREE,,[Include FW memory free support])
            AM_CONDITIONAL(INCLUDE_DSL_FIRMWARE_MEMORY_FREE, true)
            AC_SUBST([INCLUDE_DSL_FIRMWARE_MEMORY_FREE],[yes])
          else
        AC_SUBST([INCLUDE_DSL_FIRMWARE_MEMORY_FREE],[no])
          fi
   ]
)

dnl enable Pilot Tones Status support
AM_CONDITIONAL(INCLUDE_PILOT_TONES_STATUS, false)
AC_ARG_ENABLE(pilot-tones-status,
    AC_HELP_STRING(
        [--enable-pilot-tones-status],[Pilot Tones Status support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_PILOT_TONES_STATUS,,[Pilot Tones Status support])
            AM_CONDITIONAL(INCLUDE_PILOT_TONES_STATUS, true)
            AC_SUBST([INCLUDE_PILOT_TONES_STATUS],[yes])
        else
            AC_SUBST([INCLUDE_PILOT_TONES_STATUS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_PILOT_TONES_STATUS" = yes; then
            AC_DEFINE(INCLUDE_PILOT_TONES_STATUS,,[Pilot Tones Status support])
            AM_CONDITIONAL(INCLUDE_PILOT_TONES_STATUS, true)
            AC_SUBST([INCLUDE_PILOT_TONES_STATUS],[yes])
        else
            AC_SUBST([INCLUDE_PILOT_TONES_STATUS],[no])
        fi
    ]
)

dnl enable DSL CEOC support
AM_CONDITIONAL(INCLUDE_DSL_CEOC, false)
AC_ARG_ENABLE(dsl-ceoc,
    AC_HELP_STRING(
        [--enable-dsl-ceoc],[Include DSL CEOC support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CEOC,,[Include DSL CEOC support])
            AM_CONDITIONAL(INCLUDE_DSL_CEOC, true)
            AC_SUBST([INCLUDE_DSL_CEOC],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CEOC],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CEOC" = yes; then
            AC_DEFINE(INCLUDE_DSL_CEOC,,[Include DSL CEOC support])
            AM_CONDITIONAL(INCLUDE_DSL_CEOC, true)
            AC_SUBST([INCLUDE_DSL_CEOC],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CEOC],[no])
        fi
    ]
)

dnl enable DELT static data support
AM_CONDITIONAL(DSL_CPE_STATIC_DELT_DATA, false)
AC_ARG_ENABLE(dsl_delt_static,
    AC_HELP_STRING(
        [--enable-dsl-delt-static],[Include DSL DELT static data support]
    ),
    [
        if test "$enableval" = yes; then
        AC_DEFINE(DSL_CPE_STATIC_DELT_DATA,,[Include DSL DELT static data support])
        AM_CONDITIONAL(DSL_CPE_STATIC_DELT_DATA, true)
        AC_SUBST([DSL_CPE_STATIC_DELT_DATA],[yes])
        else
        AC_SUBST([DSL_CPE_STATIC_DELT_DATA],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_DSL_CPE_STATIC_DELT_DATA" = yes; then
            AC_DEFINE(DSL_CPE_STATIC_DELT_DATA,,[Include DSL DELT static data support])
            AM_CONDITIONAL(DSL_CPE_STATIC_DELT_DATA, true)
            AC_SUBST([DSL_CPE_STATIC_DELT_DATA],[yes])
        else
            AC_SUBST([DSL_CPE_STATIC_DELT_DATA],[no])
        fi
    ]
)

dnl enable DELT support
AM_CONDITIONAL(INCLUDE_DSL_DELT, false)
AC_ARG_ENABLE(dsl_delt,
    AC_HELP_STRING(
        [--enable-dsl-delt],[Include DELT support]
    ),
    [
        if test "$enableval" = no; then
        AM_CONDITIONAL(INCLUDE_DSL_DELT, false)
        AC_SUBST([INCLUDE_DSL_DELT],[no])
        else
        AC_DEFINE(INCLUDE_DSL_DELT,,[Include DELT support])
            AM_CONDITIONAL(INCLUDE_DSL_DELT, true)
        AC_SUBST([INCLUDE_DSL_DELT],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_DELT" = yes; then
            AC_DEFINE(INCLUDE_DSL_DELT,,[Include DELT support])
            AM_CONDITIONAL(INCLUDE_DSL_DELT, true)
            AC_SUBST([INCLUDE_DSL_DELT],[yes])
        else
            AC_SUBST([INCLUDE_DSL_DELT],[no])
        fi
    ]
)

dnl enable Filter Detection support
AM_CONDITIONAL(INCLUDE_DSL_FILTER_DETECTION, false)
AC_ARG_ENABLE(dsl_filter_detection,
    AC_HELP_STRING(
        [--enable-dsl-filter-detection],[Include Filter Detection support]
    ),
    [
        if test "$enableval" = no; then
        AM_CONDITIONAL(INCLUDE_DSL_FILTER_DETECTION, false)
        AC_SUBST([INCLUDE_DSL_FILTER_DETECTION],[no])
        else
        AC_DEFINE(INCLUDE_DSL_FILTER_DETECTION,,[Include Filter Detection support])
            AM_CONDITIONAL(INCLUDE_DSL_FILTER_DETECTION, true)
        AC_SUBST([INCLUDE_DSL_FILTER_DETECTION],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_FILTER_DETECTION" = yes; then
            AC_DEFINE(INCLUDE_DSL_FILTER_DETECTION,,[Include Filter Detection support])
            AM_CONDITIONAL(INCLUDE_DSL_FILTER_DETECTION, true)
            AC_SUBST([INCLUDE_DSL_FILTER_DETECTION],[yes])
        else
            AC_SUBST([INCLUDE_DSL_FILTER_DETECTION],[no])
        fi
    ]
)

dnl enable configuration get support
AM_CONDITIONAL(INCLUDE_DSL_CONFIG_GET, false)
AC_ARG_ENABLE(dsl_config_get,
    AC_HELP_STRING(
        [--enable-dsl-config-get],[Include configuration get support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_CONFIG_GET, false)
            AC_SUBST([INCLUDE_DSL_CONFIG_GET],[no])
        else
            AC_DEFINE(INCLUDE_DSL_CONFIG_GET,,[Include configuration get support])
            AM_CONDITIONAL(INCLUDE_DSL_CONFIG_GET, true)
            AC_SUBST([INCLUDE_DSL_CONFIG_GET],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CONFIG_GET" = yes; then
            AC_DEFINE(INCLUDE_DSL_CONFIG_GET,,[Include configuration get support])
            AM_CONDITIONAL(INCLUDE_DSL_CONFIG_GET, true)
            AC_SUBST([INCLUDE_DSL_CONFIG_GET],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_CONFIG_GET, false)
            AC_SUBST([INCLUDE_DSL_CONFIG_GET],[no])
        fi
    ]
)

dnl enable System Interface config support
AM_CONDITIONAL(INCLUDE_DSL_SYSTEM_INTERFACE, false)
AC_ARG_ENABLE(dsl_system_interface,
    AC_HELP_STRING(
        [--enable-dsl-system-interface],[Include System Interface configuration support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_SYSTEM_INTERFACE, false)
            AC_SUBST([INCLUDE_DSL_SYSTEM_INTERFACE],[no])
        else
            AC_DEFINE(INCLUDE_DSL_SYSTEM_INTERFACE,,[Include System Interface configuration support])
            AM_CONDITIONAL(INCLUDE_DSL_SYSTEM_INTERFACE, true)
            AC_SUBST([INCLUDE_DSL_SYSTEM_INTERFACE],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_SYSTEM_INTERFACE" = yes; then
            AC_DEFINE(INCLUDE_DSL_SYSTEM_INTERFACE,,[Include System Interface configuration support])
            AM_CONDITIONAL(INCLUDE_DSL_SYSTEM_INTERFACE, true)
            AC_SUBST([INCLUDE_DSL_SYSTEM_INTERFACE],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_SYSTEM_INTERFACE, false)
            AC_SUBST([INCLUDE_DSL_SYSTEM_INTERFACE],[no])
        fi
    ]
)

dnl enable Resource Statistics support
AM_CONDITIONAL(INCLUDE_DSL_RESOURCE_STATISTICS, false)
AC_ARG_ENABLE(dsl_resource_statistics,
    AC_HELP_STRING(
        [--enable-dsl-resource-statistics],[Include Resource Statistics support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_RESOURCE_STATISTICS, false)
            AC_SUBST([INCLUDE_DSL_RESOURCE_STATISTICS],[no])
        else
            AC_DEFINE(INCLUDE_DSL_RESOURCE_STATISTICS,,[Include Resource Statistics support])
            AM_CONDITIONAL(INCLUDE_DSL_RESOURCE_STATISTICS, true)
            AC_SUBST([INCLUDE_DSL_RESOURCE_STATISTICS],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_RESOURCE_STATISTICS" = yes; then
            AC_DEFINE(INCLUDE_DSL_RESOURCE_STATISTICS,,[Include Resource Statistics support])
            AM_CONDITIONAL(INCLUDE_DSL_RESOURCE_STATISTICS, true)
            AC_SUBST([INCLUDE_DSL_RESOURCE_STATISTICS],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_RESOURCE_STATISTICS, false)
            AC_SUBST([INCLUDE_DSL_RESOURCE_STATISTICS],[no])
        fi
    ]
)

dnl enable G997 Line Inventory support
AM_CONDITIONAL(INCLUDE_DSL_G997_LINE_INVENTORY, false)
AC_ARG_ENABLE(dsl_g997_line_inventory,
    AC_HELP_STRING(
        [--enable-dsl-g997-line-inventory],[Include G997 Line Inventory support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_G997_LINE_INVENTORY, false)
            AC_SUBST([INCLUDE_DSL_G997_LINE_INVENTORY],[no])
        else
            AC_DEFINE(INCLUDE_DSL_G997_LINE_INVENTORY,,[Include G997 Line Inventory support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_LINE_INVENTORY, true)
            AC_SUBST([INCLUDE_DSL_G997_LINE_INVENTORY],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_G997_LINE_INVENTORY" = yes; then
            AC_DEFINE(INCLUDE_DSL_G997_LINE_INVENTORY,,[Include G997 Line Inventory support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_LINE_INVENTORY, true)
            AC_SUBST([INCLUDE_DSL_G997_LINE_INVENTORY],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_G997_LINE_INVENTORY, false)
            AC_SUBST([INCLUDE_DSL_G997_LINE_INVENTORY],[no])
        fi
    ]
)

dnl enable Framing Parameters support
AM_CONDITIONAL(INCLUDE_DSL_FRAMING_PARAMETERS, false)
AC_ARG_ENABLE(dsl_framing_parameters,
    AC_HELP_STRING(
        [--enable-dsl-framing-parameters],[Include Framing Parameters support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_FRAMING_PARAMETERS, false)
            AC_SUBST([INCLUDE_DSL_FRAMING_PARAMETERS],[no])
        else
            AC_DEFINE(INCLUDE_DSL_FRAMING_PARAMETERS,,[Include Framing Parameters support])
            AM_CONDITIONAL(INCLUDE_DSL_FRAMING_PARAMETERS, true)
            AC_SUBST([INCLUDE_DSL_FRAMING_PARAMETERS],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_FRAMING_PARAMETERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_FRAMING_PARAMETERS,,[Include Framing Parameters support])
            AM_CONDITIONAL(INCLUDE_DSL_FRAMING_PARAMETERS, true)
            AC_SUBST([INCLUDE_DSL_FRAMING_PARAMETERS],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_FRAMING_PARAMETERS, false)
            AC_SUBST([INCLUDE_DSL_FRAMING_PARAMETERS],[no])
        fi
    ]
)

dnl enable G997 Framing Parameters support
AM_CONDITIONAL(INCLUDE_DSL_G997_FRAMING_PARAMETERS, false)
AC_ARG_ENABLE(dsl_g997_framing_parameters,
    AC_HELP_STRING(
        [--enable-dsl-g997-framing-parameters],[Include G997 Framing Parameters support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_G997_FRAMING_PARAMETERS, false)
            AC_SUBST([INCLUDE_DSL_G997_FRAMING_PARAMETERS],[no])
        else
            AC_DEFINE(INCLUDE_DSL_G997_FRAMING_PARAMETERS,,[Include G997 Framing Parameters support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_FRAMING_PARAMETERS, true)
            AC_SUBST([INCLUDE_DSL_G997_FRAMING_PARAMETERS],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_G997_FRAMING_PARAMETERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_G997_FRAMING_PARAMETERS,,[Include G997 Framing Parameters support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_FRAMING_PARAMETERS, true)
            AC_SUBST([INCLUDE_DSL_G997_FRAMING_PARAMETERS],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_G997_FRAMING_PARAMETERS, false)
            AC_SUBST([INCLUDE_DSL_G997_FRAMING_PARAMETERS],[no])
        fi
    ]
)


dnl enable G997 per tone values support
AM_CONDITIONAL(INCLUDE_DSL_G997_PER_TONE, false)
AC_ARG_ENABLE(dsl_g997_per_tone,
    AC_HELP_STRING(
        [--enable-dsl-g997-per-tone],[Include G997 per tone values support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_G997_PER_TONE, false)
            AC_SUBST([INCLUDE_DSL_G997_PER_TONE],[no])
        else
            AC_DEFINE(INCLUDE_DSL_G997_PER_TONE,,[Include G997 per tone values support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_PER_TONE, true)
            AC_SUBST([INCLUDE_DSL_G997_PER_TONE],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_G997_PER_TONE" = yes; then
            AC_DEFINE(INCLUDE_DSL_G997_PER_TONE,,[Include G997 per tone values support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_PER_TONE, true)
            AC_SUBST([INCLUDE_DSL_G997_PER_TONE],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_G997_PER_TONE, false)
            AC_SUBST([INCLUDE_DSL_G997_PER_TONE],[no])
        fi
    ]
)

dnl enable G997 status support
AM_CONDITIONAL(INCLUDE_DSL_G997_STATUS, false)
AC_ARG_ENABLE(dsl_g997_status,
    AC_HELP_STRING(
        [--enable-dsl-g997-status],[Include G997 status support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_G997_STATUS, false)
            AC_SUBST([INCLUDE_DSL_G997_STATUS],[no])
        else
            AC_DEFINE(INCLUDE_DSL_G997_STATUS,,[Include G997 status support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_STATUS, true)
            AC_SUBST([INCLUDE_DSL_G997_STATUS],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_G997_STATUS" = yes; then
            AC_DEFINE(INCLUDE_DSL_G997_STATUS,,[Include G997 status support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_STATUS, true)
            AC_SUBST([INCLUDE_DSL_G997_STATUS],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_G997_STATUS, false)
            AC_SUBST([INCLUDE_DSL_G997_STATUS],[no])
        fi
    ]
)

dnl enable G997 alarm support
AM_CONDITIONAL(INCLUDE_DSL_G997_ALARM, false)
AC_ARG_ENABLE(dsl_g997_alarm,
    AC_HELP_STRING(
        [--enable-dsl-g997-alarm],[Include G997 alarm support]
    ),
    [
    if test "$enableval" = no; then
        AM_CONDITIONAL(INCLUDE_DSL_G997_ALARM, false)
        AC_SUBST([INCLUDE_DSL_G997_ALARM],[no])
    else
        AC_DEFINE(INCLUDE_DSL_G997_ALARM,,[Include G997 alarm support])
        AM_CONDITIONAL(INCLUDE_DSL_G997_ALARM, true)
        AC_SUBST([INCLUDE_DSL_G997_ALARM],[yes])
    fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_G997_ALARM" = yes; then
            AC_DEFINE(INCLUDE_DSL_G997_ALARM,,[Include G997 alarm support])
            AM_CONDITIONAL(INCLUDE_DSL_G997_ALARM, true)
            AC_SUBST([INCLUDE_DSL_G997_ALARM],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_G997_ALARM, false)
            AC_SUBST([INCLUDE_DSL_G997_ALARM],[no])
        fi
    ]
)

dnl enable Misc Line Status support
AM_CONDITIONAL(INCLUDE_DSL_CPE_MISC_LINE_STATUS, false)
AC_ARG_ENABLE(dsl_misc_line_status,
    AC_HELP_STRING(
        [--enable-dsl-misc-line-status],[Include Misc Line Status support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_MISC_LINE_STATUS,,[Include Misc Line Status support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_MISC_LINE_STATUS, true)
            AC_SUBST([INCLUDE_DSL_CPE_MISC_LINE_STATUS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_MISC_LINE_STATUS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_MISC_LINE_STATUS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_MISC_LINE_STATUS,,[Include Misc Line Status support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_MISC_LINE_STATUS, true)
            AC_SUBST([INCLUDE_DSL_CPE_MISC_LINE_STATUS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_MISC_LINE_STATUS],[no])
        fi
    ]
)

dnl enable FW request support
AM_CONDITIONAL(INCLUDE_FW_REQUEST_SUPPORT, false)
AC_ARG_ENABLE(dsl_fw_request,
    AC_HELP_STRING(
        [--enable-dsl-fw-request],[Include FW request support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_FW_REQUEST_SUPPORT, false)
            AC_SUBST([INCLUDE_FW_REQUEST_SUPPORT],[no])
        else
            AC_DEFINE(INCLUDE_FW_REQUEST_SUPPORT,,[Include FW request support])
            AM_CONDITIONAL(INCLUDE_FW_REQUEST_SUPPORT, true)
            AC_SUBST([INCLUDE_FW_REQUEST_SUPPORT],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_FW_REQUEST_SUPPORT" = yes; then
            AC_DEFINE(INCLUDE_FW_REQUEST_SUPPORT,,[Include FW request support])
            AM_CONDITIONAL(INCLUDE_FW_REQUEST_SUPPORT, true)
            AC_SUBST([INCLUDE_FW_REQUEST_SUPPORT],[yes])
        else
            AC_SUBST([INCLUDE_FW_REQUEST_SUPPORT],[no])
        fi
    ]
)

dnl enable includation of deprecated functions
AM_CONDITIONAL(INCLUDE_DEPRECATED, false)
AC_ARG_ENABLE(deprecated,
    AC_HELP_STRING(
        [--enable-deprecated],[Include deprecated functions]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DEPRECATED, false)
            AC_SUBST([INCLUDE_DEPRECATED],[no])
        else
            AC_DEFINE(INCLUDE_DEPRECATED,,[Include deprecated functions])
            AM_CONDITIONAL(INCLUDE_DEPRECATED, true)
            AC_SUBST([INCLUDE_DEPRECATED],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DEPRECATED" = yes; then
            AC_DEFINE(INCLUDE_DEPRECATED,,[Include deprecated functions])
            AM_CONDITIONAL(INCLUDE_DEPRECATED, true)
            AC_SUBST([INCLUDE_DEPRECATED],[yes])
        else
            AC_SUBST([INCLUDE_DEPRECATED],[no])
        fi
    ]
)

dnl enable Device Exception Codes Support
AM_CONDITIONAL(INCLUDE_DEVICE_EXCEPTION_CODES, false)
AC_ARG_ENABLE(device_exception_codes,
    AC_HELP_STRING(
        [--enable-device-exception-codes],[Include Device Exception Codes]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DEVICE_EXCEPTION_CODES, false)
            AC_SUBST([INCLUDE_DEVICE_EXCEPTION_CODES],[no])
        else
            AC_DEFINE(INCLUDE_DEVICE_EXCEPTION_CODES,,[Include Device Exception Codes])
            AM_CONDITIONAL(INCLUDE_DEVICE_EXCEPTION_CODES, true)
            AC_SUBST([INCLUDE_DEVICE_EXCEPTION_CODES],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DEVICE_EXCEPTION_CODES" = yes; then
            AC_DEFINE(INCLUDE_DEVICE_EXCEPTION_CODES,,[Include Device Exception Codes])
            AM_CONDITIONAL(INCLUDE_DEVICE_EXCEPTION_CODES, true)
            AC_SUBST([INCLUDE_DEVICE_EXCEPTION_CODES],[yes])
        else
            AC_SUBST([INCLUDE_DEVICE_EXCEPTION_CODES],[no])
        fi
    ]
)

dnl enable IFXOS support
AM_CONDITIONAL(INCLUDE_DSL_CPE_API_IFXOS_SUPPORT, false)
AC_ARG_ENABLE(ifxos,
    AC_HELP_STRING(
        [--enable-ifxos],[Include IFXOS support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_API_IFXOS_SUPPORT,,[Include IFXOS support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_API_IFXOS_SUPPORT, true)
            AC_SUBST([INCLUDE_DSL_CPE_API_IFXOS_SUPPORT],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_API_IFXOS_SUPPORT],[no])
        fi
    ],
    [
        AC_SUBST([INCLUDE_DSL_CPE_API_IFXOS_SUPPORT],[no])
    ]
)

dnl enable PM support
AM_CONDITIONAL(INCLUDE_DSL_PM, false)
AC_ARG_ENABLE(dsl_pm,
    AC_HELP_STRING(
        [--enable-dsl-pm],[Include DSL PM support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_PM,,[Include DSL PM support])
            AM_CONDITIONAL(INCLUDE_DSL_PM, true)
            AC_SUBST([INCLUDE_DSL_PM],[yes])
        else
            AC_SUBST([INCLUDE_DSL_PM],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_PM" = yes; then
            AC_DEFINE(INCLUDE_DSL_PM,,[Include DSL PM support])
            AM_CONDITIONAL(INCLUDE_DSL_PM, true)
            AC_SUBST([INCLUDE_DSL_PM],[yes])
        else
            AC_SUBST([INCLUDE_DSL_PM],[no])
        fi
    ]
)

dnl enable PM config support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CONFIG, false)
AC_ARG_ENABLE(dsl_pm_config,
    AC_HELP_STRING(
        [--enable-dsl-pm-config],[Include PM config support]
    ),
    [
        if test "$enableval" = no; then
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CONFIG, false)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CONFIG],[no])
        else
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CONFIG,,[Include PM config support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CONFIG, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CONFIG],[yes])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CONFIG" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CONFIG,,[Include PM config support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CONFIG, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CONFIG],[yes])
        else
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CONFIG, false)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CONFIG],[no])
        fi
    ]
)

dnl enable PM channel counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_channel_counters,
    AC_HELP_STRING(
        [--enable-dsl-pm-channel-counters],[Include DSL PM channel counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS,,[Include DSL PM channel counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS,,[Include DSL PM channel counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS],[no])
        fi
    ]
)

dnl enable PM channel extended counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_channel_ext_counters,
    AC_HELP_STRING(
        [--enable-dsl-pm-channel-ext-counters],[Include DSL PM channel extended counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS,,[Include DSL PM channel extended counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS,,[Include DSL PM channel extended counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS],[no])
        fi
    ]
)

dnl enable PM datapath counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_datapath_counters,
    AC_HELP_STRING(
        [--enable-dsl-pm-datapath-counters],[Include DSL PM datapath counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS,,[Include DSL PM datapath counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS,,[Include DSL PM datapath counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS],[no])
        fi
    ]
)

dnl enable PM retransmission counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_RETX_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_retx_counters,
    AC_HELP_STRING(
        [--enable-dsl-pm-retx-counters],[Include DSL PM retransmission counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_RETX_COUNTERS,,[Include DSL PM retransmission counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_RETX_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_RETX_COUNTERS,,[Include DSL PM retransmission counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_RETX_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_COUNTERS],[no])
        fi
    ]
)

dnl enable PM datapath failure counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_datapath_failure_counters,
    AC_HELP_STRING(
        [--enable-dsl-pm-datapath-failure-counters],[Include DSL PM datapath failure counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS,,[Include DSL PM datapath failure counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS,,[Include DSL PM datapath failure counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS],[no])
        fi
    ]
)


dnl enable PM line counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_line_counters,
    AC_HELP_STRING(
        [--enable-dsl-pm-line-counters],[Include DSL PM line counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_COUNTERS,,[Include DSL PM line counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_COUNTERS,,[Include DSL PM line counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_COUNTERS],[no])
        fi
    ]
)

dnl enable PM line event showtime counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_line_event_showtime_counters,
    AC_HELP_STRING(
        [--enable-dsl-pm-line-event-showtime-counters],[Include DSL PM line event showtime counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS,,[Include DSL PM line event showtime counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS,,[Include DSL PM line event showtime counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS],[no])
        fi
    ]
)

dnl enable PM channel thresholds support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS, false)
AC_ARG_ENABLE(dsl_pm_channel_thresholds,
    AC_HELP_STRING(
        [--enable-dsl-pm-channel-thresholds],[Include DSL PM channel thresholds support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS,,[Include DSL PM channel thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS,,[Include DSL PM channel thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS],[no])
        fi
    ]
)

dnl enable PM datapath thresholds support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS, false)
AC_ARG_ENABLE(dsl_pm_datapath_thresholds,
    AC_HELP_STRING(
        [--enable-dsl-pm-datapath-thresholds],[Include DSL PM datapath thresholds support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS,,[Include DSL PM datapath thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS,,[Include DSL PM datapath thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS],[no])
        fi
    ]
)

dnl enable PM retransmission thresholds support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS, false)
AC_ARG_ENABLE(dsl_pm_retx_thresholds,
    AC_HELP_STRING(
        [--enable-dsl-pm-retx-thresholds],[Include DSL PM retransmission thresholds support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS,,[Include DSL PM retransmission thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS,,[Include DSL PM retransmission thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS],[no])
        fi
    ]
)

dnl enable PM line thresholds support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS, false)
AC_ARG_ENABLE(dsl_pm_line_thresholds,
    AC_HELP_STRING(
        [--enable-dsl-pm-line-thresholds],[Include DSL PM line thresholds support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS,,[Include DSL PM line thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS,,[Include DSL PM line thresholds support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS],[no])
        fi
    ]
)

dnl enable PM total counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_total,
    AC_HELP_STRING(
        [--enable-dsl-pm-total],[Include DSL PM total counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS,,[Include DSL PM total counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS,,[Include DSL PM total counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS],[no])
        fi
    ]
)

dnl enable PM history support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_HISTORY, false)
AC_ARG_ENABLE(dsl_pm_history,
    AC_HELP_STRING(
        [--enable-dsl-pm-history],[Include DSL PM history support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_HISTORY,,[Include DSL PM history support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_HISTORY, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_HISTORY],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_HISTORY],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_HISTORY" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_HISTORY,,[Include DSL PM history support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_HISTORY, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_HISTORY],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_HISTORY],[no])
        fi
    ]
)

dnl enable PM showtime counters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS, false)
AC_ARG_ENABLE(dsl_pm_showtime,
    AC_HELP_STRING(
        [--enable-dsl-pm-showtime],[Include DSL PM showtime counters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS,,[Include DSL PM showtime counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS,,[Include DSL PM showtime counters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS],[no])
        fi
    ]
)

dnl enable PM optional parameters support
AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS, false)
AC_ARG_ENABLE(dsl_pm_optional_parameters,
    AC_HELP_STRING(
        [--enable-dsl-pm-optional-parameters],[Include DSL PM optional parameters support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS,,[Include DSL PM optional parameters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS,,[Include DSL PM optional parameters support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS, true)
            AC_SUBST([INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS],[no])
        fi
    ]
)

dnl enable Showtime event handling
AM_CONDITIONAL(INCLUDE_DSL_CPE_TRACE_BUFFER, false)
AC_ARG_ENABLE(adsl_trace,
    AC_HELP_STRING(
        [--enable-adsl-trace],[Include showtime event logging support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_TRACE_BUFFER,,[Include ADSL showtime event logging support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_TRACE_BUFFER, true)
            AC_SUBST([INCLUDE_DSL_CPE_TRACE_BUFFER],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_TRACE_BUFFER],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_DSL_CPE_TRACE_BUFFER" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_TRACE_BUFFER,,[Include ADSL showtime event logging support])
            AM_CONDITIONAL(INCLUDE_DSL_CPE_TRACE_BUFFER, true)
            AC_SUBST([INCLUDE_DSL_CPE_TRACE_BUFFER],[yes])
        else
            AC_SUBST([INCLUDE_DSL_CPE_TRACE_BUFFER],[no])
        fi
    ]
)

AM_CONDITIONAL(INCLUDE_REAL_TIME_TRACE, false)
AC_ARG_ENABLE(real-time-trace,
    AC_HELP_STRING(
        [--enable-real-time-trace],[Include real time trace support]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_REAL_TIME_TRACE,,[Include real time trace support])
            AM_CONDITIONAL(INCLUDE_REAL_TIME_TRACE, true)
            AC_SUBST([INCLUDE_REAL_TIME_TRACE],[yes])
        else
            AC_SUBST([INCLUDE_REAL_TIME_TRACE],[no])
        fi
    ],
    [
        if test "$PREDEFINED_CONF_INCLUDE_REAL_TIME_TRACE_SUPPORT" = yes; then
            AC_DEFINE(INCLUDE_REAL_TIME_TRACE,,[Include real time trace support])
            AM_CONDITIONAL(INCLUDE_REAL_TIME_TRACE, true)
            AC_SUBST([INCLUDE_REAL_TIME_TRACE],[yes])
        else
            AC_SUBST([INCLUDE_REAL_TIME_TRACE],[no])
        fi
    ]
)

dnl set DSL DRIVER driver include path
DEFAULT_DSL_DRIVER_INCL_PATH='.'
AC_ARG_ENABLE(driver-include,
    AC_HELP_STRING(
        [--enable-driver-include=-I/path/to/your/driver],[Set the DSL DRIVER driver include path]
    ),
    [
        if test -n "$enableval"; then
            echo Set the DSL CPE API driver include path to $enableval
            AC_SUBST([DSL_DRIVER_INCL_PATH],[$enableval])
        else
            echo Set the default DSL DRIVER driver include path $DEFAULT_DSL_DRIVER_INCL_PATH
            AC_SUBST([DSL_DRIVER_INCL_PATH],[$DEFAULT_DSL_DRIVER_INCL_PATH])
        fi
    ]
)

dnl Set the configure params for dist check

AC_SUBST([DISTCHECK_CONFIGURE_PARAMS],[$CONFIGURE_OPTIONS])

AC_CONFIG_COMMANDS_PRE([
echo -e "------------------------------------------------------------------------"
echo -e " Configuration for drv_dsl_cpe_api:"
echo -e "  DSL device:                       $DSL_DEVICE_NAME"
if test -z "${DEVICE_VRX_TRUE}"; then
    echo -e "  DSL VRX device type:              $DSL_VRX_DEVICE_NAME"
fi
echo -e "  Configure model type:             $DSL_CONFIG_MODEL_TYPE"
echo -e "  Source code location:             $srcdir"
echo -e "  Compiler:                         $CC"
echo -e "  Compiler c-flags:                 $CFLAGS"
echo -e "  Extra compiler c-flags:           $EXTRA_DRV_CFLAGS"
echo -e "  Host System Type:                 $host"
echo -e "  Install path:                     $prefix"
echo -e "  Linux kernel include path:        $KERNEL_INCL_PATH"
echo -e "  Linux kernel build path:          $KERNEL_BUILD_PATH"
echo -e "  Linux kernel architecture:        $KERNEL_ARCH"
echo -e "  Include IFXOS:                    $INCLUDE_DSL_CPE_API_IFXOS_SUPPORT"
echo -e "  IFXOS include path:               $IFXOS_INCLUDE_PATH"
echo -e "  Driver Include Path               $DSL_DRIVER_INCL_PATH"
echo -e "  Max device number:                $DSL_DRV_MAX_DEVICE_NUMBER"
echo -e "  Lines per device:                 $DSL_DRV_LINES_PER_DEVICE"
echo -e "  Channels per line:                $DSL_CHANNELS_PER_LINE"
echo -e "  Build lib (only for kernel 2.6)   $DSL_CPE_API_LIBRARY_BUILD_2_6"
echo -e "  Disable debug prints:             $DSL_DEBUG_DISABLE"
echo -e "  Preselection of max. debug level: $DSL_DBG_MAX_LEVEL_SET"
echo -e "  Preselected max. debug level:     $DSL_DBG_MAX_LEVEL_PRE"
echo -e "  Include deprecated functions:     $INCLUDE_DEPRECATED"
echo -e "  Include Device Exception Codes:   $INCLUDE_DEVICE_EXCEPTION_CODES"
echo -e "  Include FW request support:       $INCLUDE_FW_REQUEST_SUPPORT"
echo -e "  Include ADSL trace buffer:        $INCLUDE_DSL_CPE_TRACE_BUFFER"
echo -e "  Include ADSL MIB:                 $INCLUDE_DSL_ADSL_MIB"
echo -e "  Include CEOC:                     $INCLUDE_DSL_CEOC"
echo -e "  Include config get support:       $INCLUDE_DSL_CONFIG_GET"
echo -e "  Include System i/f configuration: $INCLUDE_DSL_SYSTEM_INTERFACE"
echo -e "  Include Resource Statistics:      $INCLUDE_DSL_RESOURCE_STATISTICS"
echo -e "  Include Framing Parameters:       $INCLUDE_DSL_FRAMING_PARAMETERS"
echo -e "  Include G997 Line Inventory:      $INCLUDE_DSL_G997_LINE_INVENTORY"
echo -e "  Include G997 Framing Parameters:  $INCLUDE_DSL_G997_FRAMING_PARAMETERS"
echo -e "  Include G997 per tone data:       $INCLUDE_DSL_G997_PER_TONE"
echo -e "  Include G997 status:              $INCLUDE_DSL_G997_STATUS"
echo -e "  Include G997 alarm:               $INCLUDE_DSL_G997_ALARM"
echo -e "  Include DSL Bonding:              $INCLUDE_DSL_BONDING"
echo -e "  Include Pilot Tones Status:       $INCLUDE_PILOT_TONES_STATUS"
echo -e "  Include Misc Line Status          $INCLUDE_DSL_CPE_MISC_LINE_STATUS"
echo -e "  Include DELT:                     $INCLUDE_DSL_DELT"
echo -e "  Include DELT data static storage: $DSL_CPE_STATIC_DELT_DATA"
echo -e "  Include Filter Detection:         $INCLUDE_DSL_FILTER_DETECTION"
echo -e "  Include PM:                       $INCLUDE_DSL_PM"
echo -e "  Include PM config:                $INCLUDE_DSL_CPE_PM_CONFIG"
echo -e "  Include PM total:                 $INCLUDE_DSL_CPE_PM_TOTAL_COUNTERS"
echo -e "  Include PM history:               $INCLUDE_DSL_CPE_PM_HISTORY"
echo -e "  Include PM showtime:              $INCLUDE_DSL_CPE_PM_SHOWTIME_COUNTERS"
echo -e "  Include PM optional:              $INCLUDE_DSL_CPE_PM_OPTIONAL_PARAMETERS"
echo -e "  Include PM line:                  $INCLUDE_DSL_CPE_PM_LINE_COUNTERS"
echo -e "  Include PM line event showtime:   $INCLUDE_DSL_CPE_PM_LINE_EVENT_SHOWTIME_COUNTERS"
echo -e "  Include PM channel:               $INCLUDE_DSL_CPE_PM_CHANNEL_COUNTERS"
echo -e "  Include PM channel extended:      $INCLUDE_DSL_CPE_PM_CHANNEL_EXT_COUNTERS"
echo -e "  Include PM data path:             $INCLUDE_DSL_CPE_PM_DATA_PATH_COUNTERS"
echo -e "  Include PM data path failure:     $INCLUDE_DSL_CPE_PM_DATA_PATH_FAILURE_COUNTERS"
echo -e "  Include PM ReTx:                  $INCLUDE_DSL_CPE_PM_RETX_COUNTERS"
echo -e "  Include PM line threshold:        $INCLUDE_DSL_CPE_PM_LINE_THRESHOLDS"
echo -e "  Include PM channel threshold:     $INCLUDE_DSL_CPE_PM_CHANNEL_THRESHOLDS"
echo -e "  Include PM data path threshold:   $INCLUDE_DSL_CPE_PM_DATA_PATH_THRESHOLDS"
echo -e "  Include PM ReTx threshold:        $INCLUDE_DSL_CPE_PM_RETX_THRESHOLDS"
echo -e "  Include FW memory free support:   $INCLUDE_DSL_FIRMWARE_MEMORY_FREE"
echo -e "  Include real time trace support:  $INCLUDE_REAL_TIME_TRACE"
echo -e "----------------------- deprectated ! ----------------------------------"
echo -e "  currently no such functions"
echo -e "------------------------------------------------------------------------"
echo -e " Settings:"
echo -e "  Configure options:                $CONFIGURE_OPTIONS"
echo -e "------------------------------------------------------------------------"
])

AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT
